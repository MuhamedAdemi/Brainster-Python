{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["666152ab","9m5TwTOBgAIK","11V55kIdjAWe","Mj2XeR88kHZm","nKu2IHVdlwq1","3DWkKAvkoNYV","2BbQgVASoQyW","jq1sp9qYoR6F","ywQRF8-goTNG","CNpFHgAnoUMk","Lzkv92WpoVj-","oyKyk-o3oYCb","Tj7k1Viroa-G","pYwibx3gocYl"],"toc_visible":true,"authorship_tag":"ABX9TyPQtnY7RC1Rq3C6SYYfu038"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Week 1 Workshop"],"metadata":{"id":"c3pOC5VtfQFx"}},{"cell_type":"markdown","metadata":{"id":"666152ab"},"source":["## Task 1\n","\n","Ask a user to input two numbers. Is it true that their sum and product are the same?\n","\n","**Note:** write the program as clearly as possible, so that the user knows exactly what to do and another programmer will understand the code quickly. This goes for all exercises.\n","\n","#### Examples:\n","    2 + 2 == 2 * 2 -> True\n","    3 + 3 == 3 * 3 -> False\n","    \n","   "]},{"cell_type":"markdown","source":["### Solution"],"metadata":{"id":"cOoV7PNSgFJA"}},{"cell_type":"code","execution_count":7,"metadata":{"id":"16b299e3","outputId":"4ba88d3d-68c4-4027-a0c5-5ddaeb150eb1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731143776494,"user_tz":-60,"elapsed":5374,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Input number 1: 2\n","Input number 2: 2\n","2 + 2 == 2 * 2 is True\n"]}],"source":["x = int(input('Input number 1: '))\n","y = int(input('Input number 2: '))\n","\n","print(f'{x} + {y} == {x} * {y} is {x + y == x * y}')"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"d069e45f","outputId":"9875bd34-ae08-4359-9bda-28be45c1c7f8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731143779182,"user_tz":-60,"elapsed":2720,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Input number 1: 3\n","Input number 2: 3\n","3 + 3 != 3 * 3\n"]}],"source":["x = int(input('Input number 1: '))\n","y = int(input('Input number 2: '))\n","\n","if x + y == x * y:\n","    print(f'{x} + {y} == {x} * {y}')\n","else:\n","    print(f'{x} + {y} != {x} * {y}')"]},{"cell_type":"markdown","source":["## Task 2\n","\n","Create a program that gets an e-mail from a user and checks if it's valid. An email is valid if it is in the following format:\n","- `_@_._` in which `_` corresponds to a number of characters larger or equal to 1\n","- contains only single `@`\n","\n","#### Examples:\n","- `info@brainster.io` => `True`\n","- `info@brainster` => `False`\n","- `info@.io` => `False`\n","- `@brainster.io` => `False`\n","\n","##### Challenge: Use a maximum of 4 lines of code to solve this problem."],"metadata":{"id":"9m5TwTOBgAIK"}},{"cell_type":"markdown","source":["### Solution"],"metadata":{"id":"w2Ys7xU4gHXV"}},{"cell_type":"code","source":["email = input('Input the email to be checked: ')\n","\n","parts = email.split('@')\n","print(len(parts) == 2 and '.' in parts[1] and all(parts) and all(parts[1].split('.')))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2eivstNgfy8Z","executionInfo":{"status":"ok","timestamp":1731144613419,"user_tz":-60,"elapsed":3719,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"1c6daf08-d5c6-43d9-990a-3da31796ab11"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Input the email to be checked: @brainster.io\n","False\n"]}]},{"cell_type":"markdown","source":["## Task 3\n","\n","Ask for a user to enter any text. Then reverse the order of the text and show the result.\n","    \n","#### Examples:\n","- `text` => `txet`\n","- `Brainster` => `retsniarB`\n","\n","Provide two solutions: Solution 1 without using loops, Solution 2 using loops"],"metadata":{"id":"11V55kIdjAWe"}},{"cell_type":"markdown","source":["### Solution"],"metadata":{"id":"cXMziktcjLVo"}},{"cell_type":"code","execution_count":22,"metadata":{"id":"f54017f5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731144911470,"user_tz":-60,"elapsed":3407,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"b881d6cd-cd51-4974-a92e-9d00ef8e5c79"},"outputs":[{"output_type":"stream","name":"stdout","text":["Input some text : yttrr\n","yttrr => rrtty\n"]}],"source":["text = input('Input some text : ')\n","print(f'{text} => {text[::-1]}')"]},{"cell_type":"code","execution_count":19,"metadata":{"id":"80de45a5","outputId":"a8064627-1c02-4569-ea66-882e5805832e","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731144755184,"user_tz":-60,"elapsed":9376,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Input some text : aahaha ths is\n","aahaha ths is => si sht ahahaa\n"]}],"source":["text = input('Input some text : ')\n","\n","reversed_text = ''\n","for i in range(len(text) - 1, -1, -1):\n","    reversed_text += text[i]\n","\n","print(f'{text} => {reversed_text}')"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"0d13b828","outputId":"e69f6711-0b6c-4c8f-8f88-305070e193e0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731144789718,"user_tz":-60,"elapsed":34562,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Input some text : HHH UUU JJ\n","HHH UUU JJ => JJ UUU HHH\n"]}],"source":["text = input('Input some text : ')\n","\n","reversed_text = ''\n","for char in text:\n","    reversed_text = char + reversed_text\n","\n","print(f'{text} => {reversed_text}')"]},{"cell_type":"markdown","source":["## Task 4\n","\n","Ask a user to enter any text. Then, count the number of letters and integers that are in the text.\n","    \n","#### Examples:\n","    text 1 -> # of letters: 4, # of integers 1\n","    \n","    djlajdlsa3231!8&& -> # of letters: 9, # of integers 5"],"metadata":{"id":"Mj2XeR88kHZm"}},{"cell_type":"markdown","source":["### Solution"],"metadata":{"id":"yg_ljwLokVhm"}},{"cell_type":"code","source":["text = input('Input some text : ')\n","cnt_letters, cnt_numbers = 0, 0\n","\n","\n","for char in text:\n","    if char.isalpha():\n","      cnt_letters += 1\n","    if char.isdigit():\n","      cnt_numbers += 1\n","\n","print(f'Number of letters = {cnt_letters}')\n","print(f'Number of numbers = {cnt_numbers}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KXPrmOBQjYwB","executionInfo":{"status":"ok","timestamp":1728725298731,"user_tz":-120,"elapsed":12232,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"84081cf6-4615-4bcc-df9b-97d1dd41250b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Input some text : test 262 test 4 tet\n","Number of letters = 11\n","Number of numbers = 4\n"]}]},{"cell_type":"markdown","source":["##Task 5\n","\n","Find the shortest way to find the maximum/minimum element in a list of integers."],"metadata":{"id":"nKu2IHVdlwq1"}},{"cell_type":"markdown","source":["### Solution"],"metadata":{"id":"sO-Q4YRboJFk"}},{"cell_type":"markdown","source":["First way - using **list.sort()**\n","\n","> This is a function that works only on lists\n","\n"],"metadata":{"id":"CLacuOnKmQdE"}},{"cell_type":"code","source":["l = [2, 5, 6, 7, 8, 1]\n","\n","l.sort()\n","print(f'Minimum element in {l} is {l[0]}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IgY6pMCtkc8u","executionInfo":{"status":"ok","timestamp":1728231464500,"user_tz":-120,"elapsed":290,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"152f7e4c-640c-4b18-982a-2926b32d42c6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Minimum element in [1, 2, 5, 6, 7, 8] is 1\n"]}]},{"cell_type":"code","source":["l = [2, 5, 6, 7, 8, 1]\n","\n","l.sort(reverse=True)\n","print(f'Maximum element in {l} is {l[0]}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RDsB1U1ql95l","executionInfo":{"status":"ok","timestamp":1728231464773,"user_tz":-120,"elapsed":3,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"9ade28e4-7032-4bed-c089-d9900dbf696e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Maximum element in [8, 7, 6, 5, 2, 1] is 8\n"]}]},{"cell_type":"markdown","source":["Second way - using **sorted(x)**\n","\n","> This function works on any iterable, i.e. lists, tuples, sets, strings, dictionaries (sorts keys by default)."],"metadata":{"id":"Tg9Wu1ugm-KS"}},{"cell_type":"code","source":["l = [2, 5, 6, 7, 8, 1]\n","\n","l = sorted(l)\n","print(f'Minimum element in {l} is {l[0]}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Kw2iVhf3nqus","executionInfo":{"status":"ok","timestamp":1728231494252,"user_tz":-120,"elapsed":380,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"a315bd54-5196-4988-dece-cf4fe6bd38d0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Minimum element in [1, 2, 5, 6, 7, 8] is 1\n"]}]},{"cell_type":"code","source":["l = [2, 5, 6, 7, 8, 1]\n","\n","l = sorted(l, reverse=True)\n","print(f'Maximum element in {l} is {l[0]}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j_GAVQuyntke","executionInfo":{"status":"ok","timestamp":1728231494548,"user_tz":-120,"elapsed":3,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"152cba7f-8934-45dd-9be2-28cd8c813466"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Maximum element in [8, 7, 6, 5, 2, 1] is 8\n"]}]},{"cell_type":"markdown","source":["Third way - using **min(x)** and **max(x)**\n","\n","> These functions work on any iterable as well, again using keys when working with dictionaries.\n","\n","\n"],"metadata":{"id":"GF2igYLWmWHW"}},{"cell_type":"code","source":["l = [2, 5, 6, 7, 8, 1]\n","\n","print(f'Minimum element in {l} is {min(l)}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EE07dEMcmPPK","executionInfo":{"status":"ok","timestamp":1728231518756,"user_tz":-120,"elapsed":263,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"6f0fe21b-93e4-4570-c5f5-b06e301d72ab"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Minimum element in [2, 5, 6, 7, 8, 1] is 1\n"]}]},{"cell_type":"code","source":["l = [2, 5, 6, 7, 8, 1]\n","\n","print(f'Maximum element in {l} is {max(l)}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KyhPUrd6oCy8","executionInfo":{"status":"ok","timestamp":1728231528267,"user_tz":-120,"elapsed":258,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"0bd2bb8a-1597-4481-8ffd-a56af3a47e72"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Maximum element in [2, 5, 6, 7, 8, 1] is 8\n"]}]},{"cell_type":"markdown","source":["## Task 6\n","\n","Write a program that counts the total number of digits in the integer.\n","    \n","Examples:\n","    478281 -> # of digits: 6\n","    \n","    123 -> # of digits: 3"],"metadata":{"id":"3DWkKAvkoNYV"}},{"cell_type":"markdown","source":["### Solution"],"metadata":{"id":"YcsgUTAyaOwz"}},{"cell_type":"code","source":["user_input = int(input(\"Enter a number: \"))\n","number = user_input\n","\n","count = 0\n","while number > 0:\n","  count += 1\n","  digit = number % 10\n","  print(digit)\n","  number //= 10\n","\n","print(f'The number {user_input} has {count} digits.')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VyOX6BkYaQnI","executionInfo":{"status":"ok","timestamp":1731147012322,"user_tz":-60,"elapsed":3690,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"0a457f65-bf70-447f-ea01-9804edf92ad5"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a number: 875\n","5\n","7\n","8\n","The number 875 has 3 digits.\n"]}]},{"cell_type":"markdown","source":["## Task 7\n","\n","Write a program that will mimic a calculator in Python.\n","\n","The calculator should support these perations: +, -, *, /, sqrt(), inverse, **.\n","\n","\n","Example usage:\n","\n","    Enter operation: +\n","    Enter numbers: 2, 2\n","    Result: 4\n"],"metadata":{"id":"2BbQgVASoQyW"}},{"cell_type":"markdown","source":["### Solution"],"metadata":{"id":"I5o9xCZYb1Ud"}},{"cell_type":"code","source":["# This is a straightforward solution to the problem\n","import math\n","\n","list_of_operators = ['+', '-', '*', '/', 'sqrt', 'inverse', '**']\n","\n","while True:\n","    operator = input('Input operation : ')\n","    if operator == 'exit':\n","      break\n","\n","    if operator in list_of_operators:\n","\n","        if operator == '+':\n","            x, y = float(input('First number : ')), float(input('Second number : '))\n","            print(f'{x} {operator} {y} = {x + y}')\n","\n","        elif operator == '-':\n","            x, y = float(input('First number : ')), float(input('Second number : '))\n","            print(f'{x} {operator} {y} = {x - y}')\n","\n","        elif operator == '*':\n","            x, y = float(input('First number : ')), float(input('Second number : '))\n","            print(f'{x} {operator} {y} = {x * y}')\n","\n","        elif operator == '/':\n","            x, y = float(input('First number : ')), float(input('Second number : '))\n","            print(f'{x} {operator} {y} = {x / y}')\n","\n","        elif operator == 'sqrt':\n","            x = float(input('Number : '))\n","            print(f'{operator}({x}) = {math.sqrt(x)}')\n","\n","        elif operator == 'inverse':\n","            x = float(input('Number : '))\n","            print(f'{operator}({x}) = {1 / x}')\n","\n","        elif operator == '**':\n","            x, y = float(input('First number : ')), float(input('Second number : '))\n","            print(f'{x} {operator} {y} = {x ** y}')\n","    else:\n","        print(f'You have entered an invalid operator for the calculator. Supported operators are: {list_of_operators}.')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6zNGGMYUb3B_","executionInfo":{"status":"ok","timestamp":1731147189593,"user_tz":-60,"elapsed":37719,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"881997d6-9306-4ca1-95ef-1e975affd012"},"execution_count":24,"outputs":[{"name":"stdout","output_type":"stream","text":["Input operation : +\n","First number : 2\n","Second number : 4\n","2.0 + 4.0 = 6.0\n","Input operation : sqrt\n","Number : 9\n","sqrt(9.0) = 3.0\n","Input operation : exit\n"]}]},{"cell_type":"code","source":["# A more refined solution is given below\n","import math\n","\n","list_of_operators = ['+', '-', '*', '/', 'sqrt', 'inverse', '**']\n","operator = input('Input operation : ')\n","\n","if operator in list_of_operators:\n","\n","    if operator == 'sqrt' or operator == 'inverse':\n","        x = float(input('Number : '))\n","    else:\n","        x, y = float(input('First number : ')), float(input('Second number : '))\n","\n","    results = {'+' : x + y, '-' : x - y, '*' : x * y, '/' : x / y, 'sqrt' : math.sqrt(x), 'inverse' : 1 / x, '**' : x ** y}\n","    print(results[operator])\n","\n","else:\n","  print(f'You have entered an invalid operator for the calculator. Supported operators are: {list_of_operators}.')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dKXUfzIwdJBO","executionInfo":{"status":"ok","timestamp":1728923427117,"user_tz":-120,"elapsed":6291,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"814c44a8-57cb-41aa-d7c6-ccc4ad895540"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Input operation : +\n","First number : 2\n","Second number : 4\n","6.0\n"]}]},{"cell_type":"markdown","source":["## Task 8\n","\n","Define a list of any values in Python.\n","\n","Write a Python program that converts that list into a dictionary, such that each index of an element in the list is converted to string and added as a key in the dictionary for the corresponding value of that index in the list.\n","\n","Example:\n","\n","    x = [1, 2, 3] -> dict_x = {'0' : 1, '1' : 2, '2' : 3}"],"metadata":{"id":"jq1sp9qYoR6F"}},{"cell_type":"markdown","source":["### Solution"],"metadata":{"id":"i_IoI2pCdl-R"}},{"cell_type":"code","source":["x = [1, 2, 3, 8, 9]\n","dict_x = {}\n","\n","for i in range(len(x)):\n","    dict_x[str(i)] = x[i]\n","\n","print(dict_x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iHHZf1AMdry_","executionInfo":{"status":"ok","timestamp":1728922307729,"user_tz":-120,"elapsed":643,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"601abc99-1a29-41b6-f5a0-9e648600a86c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'0': 1, '1': 2, '2': 3, '3': 8, '4': 9}\n"]}]},{"cell_type":"markdown","source":["## Task 9\n","\n","Input three integers and save them in variables **n**, **a**, and **b**.\n","\n","Then do the following:\n","\n","\n","1.   Construct a new list from range a to b with a step 2.\n","2.   Construct a new tuple where the elements are in the form 2^(i).\n","3.   Construct a new set from the squares of each element in the list, if the square is greater than 50.\n","4.   Construct a new dictionary where the key is each element in the list and the values for each key are the remainder from the division of that value in the list with 7.\n","\n"],"metadata":{"id":"ywQRF8-goTNG"}},{"cell_type":"markdown","source":["### Solution"],"metadata":{"id":"_4oMvenbeTt1"}},{"cell_type":"code","source":["a = int(input(\"Enter a: \"))\n","b = int(input(\"Enter b: \"))\n","\n","new_list = []\n","for i in range(a, b + 1, 2):\n","    new_list.append(i)\n","\n","new_tuple_list = []\n","for i in new_list:\n","    new_tuple_list.append(2 ** i)\n","new_tuple = tuple(new_tuple_list)\n","\n","new_set = set()\n","for x in new_list:\n","  if x ** 2 > 50:\n","    new_set.add(x ** 2)\n","\n","new_dict = {}\n","for x in new_list:\n","    new_dict[x] = x % 7\n","\n","print(\"New List:\", new_list)\n","print(\"New Tuple:\", new_tuple)\n","print(\"New Set:\", new_set)\n","print(\"New Dictionary:\", new_dict)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"at1wHOsxeZGG","executionInfo":{"status":"ok","timestamp":1728922676101,"user_tz":-120,"elapsed":4604,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"e6a17080-d2e2-44cd-a2c7-5f89b3bba6e2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a: 3\n","Enter b: 10\n","New List: [3, 5, 7, 9]\n","New Tuple: (8, 32, 128, 512)\n","New Set: {81}\n","New Dictionary: {3: 3, 5: 5, 7: 0, 9: 2}\n"]}]},{"cell_type":"markdown","source":["## Task 10\n","\n","Write a Python program to check if each number in a list is prime or not.\n","\n","If a number is prime save **True** in another list at the same index location, else save **False**.\n","\n","Examples:\n","    \n","    [2, 3, 4, 7, 9] -> [True, True, False, True, False]\n","    \n","    [1, 5, 3] -> [True, True, True]"],"metadata":{"id":"CNpFHgAnoUMk"}},{"cell_type":"markdown","source":["### Solution"],"metadata":{"id":"IuRUWE5VfuQc"}},{"cell_type":"code","source":["# We can note here that we have nested loops, i.e. loop within a loop.\n","# We can also note that possibly there should be a better solution than this one. How can we improve this code?\n","import math\n","\n","numbers = [2, 3, 4, 7, 9]\n","prime_check = []\n","\n","for num in numbers:\n","    if num <= 1:\n","        prime_check.append(False)\n","    else:\n","        is_prime = True\n","        for i in range(2, int(math.sqrt(num)) + 1):\n","            if num % i == 0:\n","                is_prime = False\n","                break\n","        prime_check.append(is_prime)\n","\n","print(prime_check)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eyN29B7nfwCS","executionInfo":{"status":"ok","timestamp":1731148839228,"user_tz":-60,"elapsed":285,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"f87ac926-1ff2-417b-b4b3-aaf3848a65ad"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["[True, True, False, True, False]\n"]}]},{"cell_type":"markdown","source":["## Task 11\n","\n","Write a Python program that finds the average value of a list of numbers (they can be float and int)."],"metadata":{"id":"Lzkv92WpoVj-"}},{"cell_type":"markdown","source":["### Solution"],"metadata":{"id":"HZwIUK0qglvM"}},{"cell_type":"code","source":["numbers = [1, 2.5, 3, 4.5, 5]\n","\n","if len(numbers) > 0:\n","    average = sum(numbers) / len(numbers)\n","    print(\"Average:\", average)\n","else:\n","    print(\"The list is empty, average can not be computed.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SWJNP-W3gnBS","executionInfo":{"status":"ok","timestamp":1731148896958,"user_tz":-60,"elapsed":9,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"9914d1d2-46e3-48ab-a09c-8a27384b0551"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["Average: 3.2\n"]}]},{"cell_type":"markdown","source":["## Task 12\n","\n","Create a dictionary that counts the number of occurrences of each non-whitespace character in the sentence, where the key is the character and value is the number.\n","\n","Example:\n","\n","    input: \"the quick brown fox jumps over the lazy dog\"\n","            "],"metadata":{"id":"nhSt3YWPoWu-"}},{"cell_type":"markdown","source":["### Solution"],"metadata":{"id":"mCG5clXww3rs"}},{"cell_type":"code","source":["sentence = input(\"Input the sentence: \")\n","char_dict = {}\n","\n","for char in sentence:\n","    if not char.isspace():\n","        if char in char_dict:\n","            char_dict[char] += 1\n","        else:\n","            char_dict[char] = 1\n","\n","print(char_dict)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"emmnpz4sk3sT","executionInfo":{"status":"ok","timestamp":1728727499507,"user_tz":-120,"elapsed":6042,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"6a5acebe-7855-457b-945f-8cae4b2f3cd9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Input the sentence: the sentence\n","{'t': 2, 'h': 1, 'e': 4, 's': 1, 'n': 2, 'c': 1}\n"]}]},{"cell_type":"markdown","source":["## Task 13\n","\n","Solve Task 12, but now instead of characters, counting the number of words."],"metadata":{"id":"oyKyk-o3oYCb"}},{"cell_type":"markdown","source":["### Solution"],"metadata":{"id":"jdB94umGlZV7"}},{"cell_type":"code","source":["sentence = input(\"Input the sentence: \")\n","\n","# Note that the split() function has a default behavior of splitting a string by any whitespace (spaces, tabs, newlines, etc.) and removing extra consecutive whitespace\n","words = sentence.lower().split()\n","word_count = {}\n","\n","for word in words:\n","  # Note: The strip() method in Python is used to remove leading and trailing characters (spaces by default) from a string. If not specified, if will remove whitespaces.\n","    word = word.strip('.,!?')\n","\n","    if word in word_count:\n","        word_count[word] += 1\n","    else:\n","        word_count[word] = 1\n","\n","print(word_count)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YAjMGl9vla7G","executionInfo":{"status":"ok","timestamp":1728924120338,"user_tz":-120,"elapsed":11546,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"02611055-5237-414e-bfee-75ee802ca890"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Input the sentence: this is a new sentence, and this is a new class\n","{'this': 2, 'is': 2, 'a': 2, 'new': 2, 'sentence': 1, 'and': 1, 'class': 1}\n"]}]},{"cell_type":"markdown","source":["## Task 14\n","\n","Write a Python program to find the two numbers whose product is maximum among all the pairs in a given set of numbers.\n","\n","Examples:\n","\n","    Original set: {1, 2, 3, 4, 5, 6, 7, 8, 9}\n","    Maximum product of two numbers among all pairs in the said set: (8, 9)\n","\n","    Original set: {1, -2, -3, 4, 5, -6, 7, -8, -9}\n","    Maximum product of two numbers among all pairs in the said set: (-9, -8)"],"metadata":{"id":"Tj7k1Viroa-G"}},{"cell_type":"markdown","source":["### Solution"],"metadata":{"id":"PFcM1f3Xr2n9"}},{"cell_type":"code","source":["nums = {1, 2, 3, 4, 5, 6, 7, 8, 9}\n","\n","sorted_nums = sorted(nums)\n","\n","# Why are we looking into the two smallest numbers as well? See the code in the following cell!\n","max1, max2 = sorted_nums[-1], sorted_nums[-2]\n","min1, min2 = sorted_nums[0], sorted_nums[1]\n","\n","if max1 * max2 > min1 * min2:\n","    result = (max2, max1)\n","else:\n","    result = (min1, min2)\n","\n","print(\"Maximum product of two numbers among all pairs:\", result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R_4CxMaAr4dR","executionInfo":{"status":"ok","timestamp":1731149540959,"user_tz":-60,"elapsed":298,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"ccdfe819-0c61-46a2-d8e2-ceb9800db88b"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["Maximum product of two numbers among all pairs: (8, 9)\n"]}]},{"cell_type":"code","source":["nums = {1, -2, -3, 4, 5, -6, 7, -8, -9}\n","\n","sorted_nums = sorted(nums)\n","\n","max1, max2 = sorted_nums[-1], sorted_nums[-2]\n","min1, min2 = sorted_nums[0], sorted_nums[1]\n","\n","if max1 * max2 > min1 * min2:\n","    result = (max2, max1)\n","else:\n","    result = (min1, min2)\n","\n","print(\"Maximum product of two numbers among all pairs:\", result)\n","print(\"If we don't look into negative numbers we would get the following result:\", (max2, max1))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"enqUE5WbsT6o","executionInfo":{"status":"ok","timestamp":1731149544080,"user_tz":-60,"elapsed":293,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"24e37ca3-4b1b-49b3-a872-9eee5b3ec986"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["Maximum product of two numbers among all pairs: (-9, -8)\n","If we don't look into negative numbers we would get the following result: (5, 7)\n"]}]},{"cell_type":"markdown","source":["## Task 15\n","\n","Given the info about students (see the code block below), answer the following questions:\n","\n","1. What is the average number of points that all students received for the projects?\n","2. What is the average number of points per student?\n","3. Who is the best student, i.e. the student with highest average points?"],"metadata":{"id":"pYwibx3gocYl"}},{"cell_type":"code","source":["x = [\n","      {\n","      \"student\":\"John\",\n","      \"course\":\"Computer Science\",\n","      \"projects\":[\n","         {\n","            \"Project 1\":93\n","         },\n","         {\n","            \"Project 2\":70\n","         },\n","         {\n","            \"Project 3\":70\n","         },\n","         {\n","            \"Project 4\":56\n","         },\n","         {\n","            \"Project 5\":40\n","         }\n","      ]\n","   },\n","   {\n","      \"student\":\"Shelly\",\n","      \"course\":\"Computer Science\",\n","      \"projects\":[\n","         {\n","            \"Project 1\":73\n","         },\n","         {\n","            \"Project 2\":94\n","         },\n","         {\n","            \"Project 3\":99\n","         },\n","         {\n","            \"Project 4\":45\n","         },\n","         {\n","            \"Project 5\":64\n","         }\n","      ]\n","   },\n","   {\n","      \"student\":\"Pat\",\n","      \"course\":\"Computer Science\",\n","      \"projects\":[\n","         {\n","            \"Project 1\":94\n","         },\n","         {\n","            \"Project 2\":50\n","         },\n","         {\n","            \"Project 3\":80\n","         },\n","         {\n","            \"Project 4\":44\n","         },\n","         {\n","            \"Project 5\":88\n","         }\n","      ]\n","   },\n","   {\n","      \"student\":\"Sam\",\n","      \"course\":\"Computer Science\",\n","      \"projects\":[\n","         {\n","            \"Project 1\":76\n","         },\n","         {\n","            \"Project 2\":95\n","         },\n","         {\n","            \"Project 3\":63\n","         },\n","         {\n","            \"Project 4\":48\n","         },\n","         {\n","            \"Project 5\":91\n","         }\n","      ]\n","   },\n","   {\n","      \"student\":\"Jeffrey\",\n","      \"course\":\"Computer Science\",\n","      \"projects\":[\n","         {\n","            \"Project 1\":96\n","         },\n","         {\n","            \"Project 2\":75\n","         },\n","         {\n","            \"Project 3\":100\n","         },\n","         {\n","            \"Project 4\":45\n","         },\n","         {\n","            \"Project 5\":75\n","         }\n","      ]\n","   },\n","   {\n","      \"student\":\"Irene\",\n","      \"course\":\"Computer Science\",\n","      \"projects\":[\n","         {\n","            \"Project 1\":86\n","         },\n","         {\n","            \"Project 2\":65\n","         },\n","         {\n","            \"Project 3\":88\n","         },\n","         {\n","            \"Project 4\":95\n","         },\n","         {\n","            \"Project 5\":88\n","         }\n","      ]\n","   },\n","   {\n","      \"student\":\"Mary\",\n","      \"course\":\"Computer Science\",\n","      \"projects\":[\n","         {\n","            \"Project 1\":65\n","         },\n","         {\n","            \"Project 2\":94\n","         },\n","         {\n","            \"Project 3\":43\n","         },\n","         {\n","            \"Project 4\":94\n","         },\n","         {\n","            \"Project 5\":45\n","         }\n","      ]\n","   },\n","   {\n","      \"student\":\"Molly\",\n","      \"course\":\"Computer Science\",\n","      \"projects\":[\n","         {\n","            \"Project 1\":68\n","         },\n","         {\n","            \"Project 2\":98\n","         },\n","         {\n","            \"Project 3\":82\n","         },\n","         {\n","            \"Project 4\":55\n","         },\n","         {\n","            \"Project 5\":60\n","         }\n","      ]\n","   },\n","   {\n","      \"student\":\"Beth\",\n","      \"course\":\"Computer Science\",\n","      \"projects\":[\n","         {\n","            \"Project 1\":64\n","         },\n","         {\n","            \"Project 2\":94\n","         },\n","         {\n","            \"Project 3\":62\n","         },\n","         {\n","            \"Project 4\":77\n","         },\n","         {\n","            \"Project 5\":92\n","         }\n","      ]\n","   },\n","   {\n","      \"student\":\"Jonathan\",\n","      \"course\":\"Computer Science\",\n","      \"projects\":[\n","         {\n","            \"Project 1\":99\n","         },\n","         {\n","            \"Project 2\":66\n","         },\n","         {\n","            \"Project 3\":55\n","         },\n","         {\n","            \"Project 4\":45\n","         },\n","         {\n","            \"Project 5\":42\n","         }\n","      ]\n","   }\n","]"],"metadata":{"id":"xaRqO25WaDoi","executionInfo":{"status":"ok","timestamp":1731149772548,"user_tz":-60,"elapsed":287,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}}},"execution_count":30,"outputs":[]},{"cell_type":"markdown","source":["### Solution"],"metadata":{"id":"n7wwI6ePtEXy"}},{"cell_type":"markdown","source":["First, let's understand what we have here.\n","\n","**x** is a list that contains dictionaries.\n","Each dictionary represents data on one student, and in each dictionary under they key \"projects\" a list of dictionaries is stored.\n"],"metadata":{"id":"vYC6yDUXtxud"}},{"cell_type":"code","source":["x[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u4g30M4stDt3","executionInfo":{"status":"ok","timestamp":1731149964905,"user_tz":-60,"elapsed":413,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"f8084d32-fccb-44de-f713-2a1ab9f9c554"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'student': 'John',\n"," 'course': 'Computer Science',\n"," 'projects': [{'Project 1': 93},\n","  {'Project 2': 70},\n","  {'Project 3': 70},\n","  {'Project 4': 56},\n","  {'Project 5': 40}]}"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["x[0]['student']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"mVjHZObruVgk","executionInfo":{"status":"ok","timestamp":1731149982863,"user_tz":-60,"elapsed":335,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"ae6ab316-5639-45a7-b142-900279d2de67"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'John'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["x[0]['projects']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pYlaLNqBuXlv","executionInfo":{"status":"ok","timestamp":1731149988045,"user_tz":-60,"elapsed":323,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"b37fd0b9-e62f-4cb6-f4d0-d9bbc26c0a0f"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'Project 1': 93},\n"," {'Project 2': 70},\n"," {'Project 3': 70},\n"," {'Project 4': 56},\n"," {'Project 5': 40}]"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["x[0]['projects'][0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WLxw0nEBuaV4","executionInfo":{"status":"ok","timestamp":1731150010136,"user_tz":-60,"elapsed":407,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"089d7c0d-af8a-4095-b4a4-826627003ef3"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Project 1': 93}"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["x[0]['projects'][0]['Project 1']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_YIjEhOBucwN","executionInfo":{"status":"ok","timestamp":1731150013750,"user_tz":-60,"elapsed":297,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"5b37c778-9f91-4a85-cc24-0c8f800d7dc7"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["93"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["Now, let's solve the demands for this task.\n","\n","1. What is the average number of points that all students received for the projects?"],"metadata":{"id":"CvIUB4R6uuow"}},{"cell_type":"code","source":["total_points = 0\n","total_projects = 0\n","\n","for student in x:\n","    for project in student['projects']:\n","        for points in project.values():\n","            total_points += points\n","            total_projects += 1\n","\n","average_points_all = total_points / total_projects\n","print(\"Average points across all projects for all students:\", average_points_all)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CI1OFOa0ulNA","executionInfo":{"status":"ok","timestamp":1728250107427,"user_tz":-120,"elapsed":416,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"b18dd3ab-20bd-4b0d-fdc8-7397686c4dc7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Average points across all projects for all students: 72.94\n"]}]},{"cell_type":"markdown","source":["2. What is the average number of points per student?"],"metadata":{"id":"nWoCZ3BCvEOo"}},{"cell_type":"code","source":["student_avg_points = {}\n","\n","for student in x:\n","    student_total_points = 0\n","    num_projects = len(student['projects'])\n","    for project in student['projects']:\n","        for points in project.values():\n","            student_total_points += points\n","\n","    student_avg_points[student['student']] = student_total_points / num_projects\n","\n","for student, avg_points in student_avg_points.items():\n","    print(f\"{student} - {avg_points:.2f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1rK8qgv3u9Jb","executionInfo":{"status":"ok","timestamp":1728250287097,"user_tz":-120,"elapsed":598,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"410c242e-aa03-4832-d227-fdfcaf68491f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["John - 65.80\n","Shelly - 75.00\n","Pat - 71.20\n","Sam - 74.60\n","Jeffrey - 78.20\n","Irene - 84.40\n","Mary - 68.20\n","Molly - 72.60\n","Beth - 77.80\n","Jonathan - 61.60\n"]}]},{"cell_type":"markdown","source":["3. Who is the best student, i.e. the student with highest average points?"],"metadata":{"id":"StnRJ0eWvj4u"}},{"cell_type":"code","source":["max_points = 0\n","\n","for key, value in student_avg_points.items():\n","  if value > max_points:\n","    max_points = value\n","    max_person = key\n","\n","print(f\"The best student is {max_person} with the highest average of points - {max_points}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JnriF3dfvN4T","executionInfo":{"status":"ok","timestamp":1728250484437,"user_tz":-120,"elapsed":409,"user":{"displayName":"Ana Todorovska","userId":"17038569741700808811"}},"outputId":"e92c754e-9f23-45fe-ec36-69d92c10cb93"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The best student is Irene with the highest average of points - 84.4\n"]}]}]}